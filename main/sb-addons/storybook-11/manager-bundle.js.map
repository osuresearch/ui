{
  "version": 3,
  "sources": ["global-externals:@storybook/addons", "global-externals:react", "../../../.storybook/manager.tsx"],
  "sourcesContent": ["export default __STORYBOOKADDONS__;\nconst { addons, types, mockChannel } = __STORYBOOKADDONS__;\nexport { addons, types, mockChannel };", "export default __REACT__;\nconst { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version } = __REACT__;\nexport { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version };", "import { addons } from '@storybook/addons';\n\nimport React from 'react';\n\naddons.setConfig({\n  // isFullscreen: false,\n  // showNav: true,\n  // showPanel: true,\n  // panelPosition: 'bottom',\n  enableShortcuts: false,\n  // showToolbar: false,\n  // theme: undefined,\n  // selectedPanel: undefined,\n  // initialActive: 'sidebar',\n  sidebar: {\n    // showRoots: false,\n    collapsedRoots: [\n      'components',\n      'buttons',\n      'hooks',\n      'utilities',\n      'dialogs',\n      'forms',\n      'bux-stuff',\n      'ohio-state',\n      'unstyled',\n      'internal',\n      'contributing',\n    ],\n    renderLabel: (item) => {\n      // not super useful info. I want the meta...\n      // TODO: No inline hacking\n      // type: story, root, component\n      // parent: components, depth: 1\n      // isLeaf, isRoot, isComponent, renderLabel\n      return <div className={`rui-link--${item.type}`}>{item.name}</div>;\n    },\n  },\n  // toolbar: {\n  //   title: { hidden: true },\n  //   zoom: { hidden: true },\n  //   eject: { hidden: true },\n  //   copy: { hidden: true },\n  //   fullscreen: { hidden: true },\n  // },\n});\n"],
  "mappings": ";AAAA,IAAOA,EAAQ,oBACT,CAAE,OAAAC,EAAQ,MAAAC,EAAO,YAAAC,CAAY,EAAI,oBCDvC,IAAOC,EAAQ,UACT,CAAE,SAAAC,EAAU,UAAAC,EAAW,SAAAC,EAAU,SAAAC,EAAU,cAAAC,EAAe,WAAAC,EAAY,SAAAC,EAAU,mDAAAC,EAAoD,aAAAC,EAAc,cAAAC,EAAe,cAAAC,EAAe,cAAAC,EAAe,UAAAC,EAAW,WAAAC,EAAY,eAAAC,EAAgB,KAAAC,EAAM,KAAAC,EAAM,YAAAC,EAAa,WAAAC,EAAY,cAAAC,EAAe,UAAAC,EAAW,oBAAAC,EAAqB,gBAAAC,EAAiB,QAAAC,EAAS,WAAAC,EAAY,OAAAC,EAAQ,SAAAC,EAAU,QAAAC,CAAQ,EAAI,UCGpYC,EAAO,UAAU,CAKf,gBAAiB,GAKjB,QAAS,CAEP,eAAgB,CACd,aACA,UACA,QACA,YACA,UACA,QACA,YACA,aACA,WACA,WACA,cACF,EACA,YAAcC,GAMLC,EAAA,cAAC,OAAI,UAAW,aAAaD,EAAK,IAAI,IAAKA,EAAK,IAAK,CAEhE,CAQF,CAAC",
  "names": ["addons_default", "addons", "types", "mockChannel", "react_default", "Children", "Component", "Fragment", "Profiler", "PureComponent", "StrictMode", "Suspense", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "cloneElement", "createContext", "createElement", "createFactory", "createRef", "forwardRef", "isValidElement", "lazy", "memo", "useCallback", "useContext", "useDebugValue", "useEffect", "useImperativeHandle", "useLayoutEffect", "useMemo", "useReducer", "useRef", "useState", "version", "addons", "item", "react_default"]
}
