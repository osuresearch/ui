"use strict";(self.webpackChunk_osuresearch_ui=self.webpackChunk_osuresearch_ui||[]).push([[667],{"./src/components/SplitButton/SplitButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Disabled:()=>Disabled,Overview:()=>Overview,Primary:()=>Primary,Subtle:()=>Subtle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>SplitButton_stories});var utils=__webpack_require__("./src/storybook/utils.ts"),react=__webpack_require__("./node_modules/react/index.js"),dist_import=__webpack_require__("./node_modules/@react-aria/menu/dist/import.mjs"),menu_dist_import=__webpack_require__("./node_modules/@react-stately/menu/dist/import.mjs"),Button=__webpack_require__("./src/components/Button/Button.tsx"),Menu=__webpack_require__("./src/components/Menu/Menu.tsx"),Icon=__webpack_require__("./src/components/Icon/Icon.tsx"),Group=__webpack_require__("./src/components/Group/Group.tsx"),Divider=__webpack_require__("./src/components/Divider/Divider.tsx"),useStyleSystemProps=__webpack_require__("./src/hooks/useStyleSystemProps.ts"),Popover=__webpack_require__("./src/components/Popover/Popover.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function SplitButton({variant,isDisabled,label,children,iconProps,defaultKey,onAction,...props}){const triggerRef=(0,react.useRef)(null),state=(0,menu_dist_import.W)(props),[styleSystemProps]=(0,useStyleSystemProps.z)(props),{menuTriggerProps,menuProps}=(0,dist_import.u4)({...props,type:"menu"},state,triggerRef);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(Group.Z,{ref:triggerRef,gap:0,children:[(0,jsx_runtime.jsx)(Button.z,{variant,onPress:()=>onAction&&onAction(defaultKey),isDisabled,...styleSystemProps,children:label}),(0,jsx_runtime.jsx)(Divider.i,{orientation:"vertical",gap:0}),(0,jsx_runtime.jsx)(Button.z,{py:"xs",variant,isDisabled,...menuTriggerProps,children:(0,jsx_runtime.jsx)(Icon.J,{name:"chevron",rotate:90,"aria-label":"More options",...iconProps})})]}),state.isOpen&&(0,jsx_runtime.jsx)(Popover.J,{state,triggerRef,placement:"bottom left",children:(0,jsx_runtime.jsx)(Menu.v2,{...menuProps,...props,children})})]})}try{SplitButton.displayName="SplitButton",SplitButton.__docgenInfo={description:"",displayName:"SplitButton",props:{id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},m:{defaultValue:null,description:"",name:"m",required:!1,type:{name:"ResponsiveProp<Spacing>"}},my:{defaultValue:null,description:"",name:"my",required:!1,type:{name:"ResponsiveProp<Spacing>"}},mx:{defaultValue:null,description:"",name:"mx",required:!1,type:{name:"ResponsiveProp<Spacing>"}},mt:{defaultValue:null,description:"",name:"mt",required:!1,type:{name:"ResponsiveProp<Spacing>"}},mb:{defaultValue:null,description:"",name:"mb",required:!1,type:{name:"ResponsiveProp<Spacing>"}},ml:{defaultValue:null,description:"",name:"ml",required:!1,type:{name:"ResponsiveProp<Spacing>"}},mr:{defaultValue:null,description:"",name:"mr",required:!1,type:{name:"ResponsiveProp<Spacing>"}},p:{defaultValue:null,description:"",name:"p",required:!1,type:{name:"ResponsiveProp<Spacing>"}},py:{defaultValue:null,description:"",name:"py",required:!1,type:{name:"ResponsiveProp<Spacing>"}},px:{defaultValue:null,description:"",name:"px",required:!1,type:{name:"ResponsiveProp<Spacing>"}},pt:{defaultValue:null,description:"",name:"pt",required:!1,type:{name:"ResponsiveProp<Spacing>"}},pb:{defaultValue:null,description:"",name:"pb",required:!1,type:{name:"ResponsiveProp<Spacing>"}},pl:{defaultValue:null,description:"",name:"pl",required:!1,type:{name:"ResponsiveProp<Spacing>"}},pr:{defaultValue:null,description:"",name:"pr",required:!1,type:{name:"ResponsiveProp<Spacing>"}},w:{defaultValue:null,description:"",name:"w",required:!1,type:{name:"ResponsiveProp<Width<string | number>>"}},miw:{defaultValue:null,description:"",name:"miw",required:!1,type:{name:"ResponsiveProp<MinWidth<string | number>>"}},maw:{defaultValue:null,description:"",name:"maw",required:!1,type:{name:"ResponsiveProp<MaxWidth<string | number>>"}},h:{defaultValue:null,description:"",name:"h",required:!1,type:{name:"ResponsiveProp<Height<string | number>>"}},mih:{defaultValue:null,description:"",name:"mih",required:!1,type:{name:"ResponsiveProp<MinHeight<string | number>>"}},mah:{defaultValue:null,description:"",name:"mah",required:!1,type:{name:"ResponsiveProp<MaxHeight<string | number>>"}},c:{defaultValue:null,description:"",name:"c",required:!1,type:{name:'ThemeProp<"white" | "black" | "clear" | "focus" | "neutral" | "neutral-subtle" | "neutral-bold" | "surface" | "surface-inverse" | "surface-subtle" | "surface-subtle-inverse" | "surface-bold" | ... 60 more ... | "gray">'}},bgc:{defaultValue:null,description:"",name:"bgc",required:!1,type:{name:'ThemeProp<"white" | "black" | "clear" | "focus" | "neutral" | "neutral-subtle" | "neutral-bold" | "surface" | "surface-inverse" | "surface-subtle" | "surface-subtle-inverse" | "surface-bold" | ... 60 more ... | "gray">'}},ff:{defaultValue:null,description:"",name:"ff",required:!1,type:{name:"enum",value:[{value:'"sans"'},{value:'"serif"'},{value:'"mono"'}]}},fs:{defaultValue:null,description:"",name:"fs",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxl"'},{value:'"xs"'},{value:'"base"'}]}},fw:{defaultValue:null,description:"",name:"fw",required:!1,type:{name:"enum",value:[{value:'"black"'},{value:'"regular"'},{value:'"semibold"'},{value:'"bold"'},{value:'"extrabold"'}]}},gridArea:{defaultValue:null,description:"Where to place this component within a CSS Grid.\nMust be one of the `grid-template-area` values\nin the parent grid.",name:"gridArea",required:!1,type:{name:"ResponsiveProp<string>"}},gridSpan:{defaultValue:null,description:"Column span in a grid layout.\n\nEquivalent to CSS `grid-column: span N / span N;`",name:"gridSpan",required:!1,type:{name:'ResponsiveProp<number | "auto">'}},isDisabled:{defaultValue:null,description:"Whether the button is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.\nWhere the focus should be set.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => void)"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => void)"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"((isFocused: boolean) => void)"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent) => void)"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"((e: KeyboardEvent) => void)"}},onPressStart:{defaultValue:null,description:"Handler that is called when a press interaction starts.",name:"onPressStart",required:!1,type:{name:"((e: PressEvent) => void)"}},onPressEnd:{defaultValue:null,description:"Handler that is called when a press interaction ends, either\nover the target or when the pointer leaves the target.",name:"onPressEnd",required:!1,type:{name:"((e: PressEvent) => void)"}},onPressChange:{defaultValue:null,description:"Handler that is called when the press state changes.",name:"onPressChange",required:!1,type:{name:"((isPressed: boolean) => void)"}},onPressUp:{defaultValue:null,description:"Handler that is called when a press is released over the target, regardless of\nwhether it started on the target or not.",name:"onPressUp",required:!1,type:{name:"((e: PressEvent) => void)"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "true" | "false"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'}},"aria-controls":{defaultValue:null,description:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",name:"aria-controls",required:!1,type:{name:"string"}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons.',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},type:{defaultValue:{value:"'button'"},description:"The behavior of the button when used in an HTML form.",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}},excludeFromTabOrder:{defaultValue:null,description:"Whether to exclude the element from the sequential tab order. If true,\nthe element will not be focusable via the keyboard by tabbing. This should\nbe avoided except in rare scenarios where an alternative means of accessing\nthe element or its functionality via the keyboard is available.",name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},elementType:{defaultValue:{value:"'button'"},description:"The HTML element or React element used to render the button, e.g. 'div', 'a', or `RouterLink`.",name:"elementType",required:!1,type:{name:'JSXElementConstructor<any> | "button"'}},target:{defaultValue:null,description:"The target window for the link.",name:"target",required:!1,type:{name:"string"}},href:{defaultValue:null,description:'A URL to link to if elementType="a".',name:"href",required:!1,type:{name:"string"}},rel:{defaultValue:null,description:"The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).",name:"rel",required:!1,type:{name:"string"}},variant:{defaultValue:null,description:"Alternate rendering styles",name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"primary"'},{value:'"subtle"'}]}},renderLeft:{defaultValue:null,description:"",name:"renderLeft",required:!1,type:{name:"ReactNode"}},renderRight:{defaultValue:null,description:"",name:"renderRight",required:!1,type:{name:"ReactNode"}},trigger:{defaultValue:{value:"'press'"},description:"How the menu is triggered.",name:"trigger",required:!1,type:{name:"enum",value:[{value:'"press"'},{value:'"longPress"'}]}},isOpen:{defaultValue:null,description:"Whether the overlay is open by default (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"((isOpen: boolean) => void)"}},shouldFocusWrap:{defaultValue:null,description:"Whether keyboard navigation is circular.",name:"shouldFocusWrap",required:!1,type:{name:"boolean"}},onAction:{defaultValue:null,description:"Handler that is called when an item is selected.\nEvent handler for either the default button press or a menu item press\n@param key",name:"onAction",required:!1,type:{name:"(((key: Key) => void) & ((key?: Key) => void))"}},onClose:{defaultValue:null,description:"Handler that is called when the menu should close after selecting an item.",name:"onClose",required:!1,type:{name:"(() => void)"}},children:{defaultValue:null,description:"The contents of the collection.\n`Item` components only",name:"children",required:!0,type:{name:"CollectionChildren<T>"}},items:{defaultValue:null,description:"Item objects in the collection.",name:"items",required:!1,type:{name:"Iterable<T>"}},disabledKeys:{defaultValue:null,description:"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",name:"disabledKeys",required:!1,type:{name:"Iterable<Key>"}},selectionMode:{defaultValue:null,description:"The type of selection that is allowed in the collection.",name:"selectionMode",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"multiple"'},{value:'"single"'}]}},disallowEmptySelection:{defaultValue:null,description:"Whether the collection allows empty selection.",name:"disallowEmptySelection",required:!1,type:{name:"boolean"}},selectedKeys:{defaultValue:null,description:"The currently selected keys in the collection (controlled).",name:"selectedKeys",required:!1,type:{name:'Iterable<Key> | "all"'}},defaultSelectedKeys:{defaultValue:null,description:"The initial selected keys in the collection (uncontrolled).",name:"defaultSelectedKeys",required:!1,type:{name:'Iterable<Key> | "all"'}},onSelectionChange:{defaultValue:null,description:"Handler that is called when the selection changes.",name:"onSelectionChange",required:!1,type:{name:"((keys: Selection) => any)"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},defaultKey:{defaultValue:null,description:"Value passed to `onAction` if the default action button is pressed",name:"defaultKey",required:!1,type:{name:"Key"}},iconProps:{defaultValue:null,description:"Additional props to spread into the icon",name:"iconProps",required:!1,type:{name:"IconProps"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/SplitButton/SplitButton.tsx#SplitButton"]={docgenInfo:SplitButton.__docgenInfo,name:"SplitButton",path:"src/components/SplitButton/SplitButton.tsx#SplitButton"})}catch(__react_docgen_typescript_loader_error){}var collections_dist_import=__webpack_require__("./node_modules/@react-stately/collections/dist/import.mjs");const SplitButton_stories={title:"Buttons / SplitButton",...(0,utils._v)(SplitButton).withStyleSystemProps()},Overview=(0,utils.no)((args=>(0,jsx_runtime.jsxs)(SplitButton,{...args,label:"Paste",children:[(0,jsx_runtime.jsx)(collections_dist_import.ck,{children:"Paste as plain text"},"plain"),(0,jsx_runtime.jsx)(collections_dist_import.ck,{children:"Paste as markdown"},"markdown")]}))),Primary=(0,utils.no)(Overview,{variant:"primary"}).withDescription("\n  Use a primary button to highlight the strongest call to action on a page.\n  Primary buttons should only appear once per container and not every\n  screen requires a primary button.\n"),Subtle=(0,utils.no)(Overview,{variant:"subtle"}).withDescription('\n  Use subtle buttons along with primary buttons for secondary actions,\n  such as "Cancel".\n'),Disabled=(0,utils.no)(Overview,{isDisabled:!0});Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:'RUIComponentStory<SplitButtonProps>(args => <SplitButton {...args} label="Paste">\n    <Item key="plain">Paste as plain text</Item>\n    <Item key="markdown">Paste as markdown</Item>\n  </SplitButton>)',...Overview.parameters?.docs?.source}}},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"RUIComponentStory(Overview, {\n  variant: 'primary'\n}).withDescription(`\n  Use a primary button to highlight the strongest call to action on a page.\n  Primary buttons should only appear once per container and not every\n  screen requires a primary button.\n`)",...Primary.parameters?.docs?.source}}},Subtle.parameters={...Subtle.parameters,docs:{...Subtle.parameters?.docs,source:{originalSource:"RUIComponentStory(Overview, {\n  variant: 'subtle'\n}).withDescription(`\n  Use subtle buttons along with primary buttons for secondary actions,\n  such as \"Cancel\".\n`)",...Subtle.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"RUIComponentStory(Overview, {\n  isDisabled: true\n})",...Disabled.parameters?.docs?.source}}};const __namedExportsOrder=["Overview","Primary","Subtle","Disabled"]}}]);